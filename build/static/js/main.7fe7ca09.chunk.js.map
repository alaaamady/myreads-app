{"version":3,"sources":["BooksAPI.js","components/BookShelfChanger.js","components/Book.js","components/BookShelf.js","components/BookCase.js","components/OpenSearchButton.js","components/BookList.js","components/SearchResults.js","components/ClosedSearchButton.js","components/SearchBooksInput.js","components/SearchBar.js","components/BookSearch.js","App.js","index.js"],"names":["api","token","localStorage","Math","random","toString","substr","headers","Accept","Authorization","getAll","fetch","concat","then","res","json","data","books","update","book","shelf","id","method","Object","objectSpread","Content-Type","body","JSON","stringify","search","query","BookShelfChanger","state","value","_this","props","handleChane","event","setState","target","onMove","react_default","a","createElement","className","this","onChange","handleChange","disabled","Component","Book","style","width","height","backgroundImage","imageLinks","thumbnail","components_BookShelfChanger","title","authors","join","BookShelf","booksOnThisShelf","filter","key","name","map","components_Book","BookCase","bookshelves","components_BookShelf","OpenSearchButton","react_router_dom","to","BookList","_this$props","components_BookCase","components_OpenSearchButton","SearchResults","searchBooks","myBooks","updatedBooks","b","ClosedSearchButton","onResetSearch","onClick","SearchBooksInput","val","onSearch","type","placeholder","autoFocus","SearchBar","components_ClosedSearchButton","components_SearchBooksInput","BookSearch","components_SearchBar","components_SearchResults","BooksApp","componentDidMount","BooksAPI","moveBook","searchForBooks","debounce","length","error","resetSearch","_this2","_this$state","react_router","exact","path","render","components_BookList","components_BookSearch","ReactDOM","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.7fe7ca09.chunk.js","sourcesContent":["\nconst api = \"https://reactnd-books-api.udacity.com\"\n\n\n// Generate a unique token for storing your bookshelf data on the backend server.\nlet token = localStorage.token\nif (!token)\n  token = localStorage.token = Math.random().toString(36).substr(-8)\n\nconst headers = {\n  'Accept': 'application/json',\n  'Authorization': token\n}\n\nexport const get = (bookId) =>\n  fetch(`${api}/books/${bookId}`, { headers })\n    .then(res => res.json())\n    .then(data => data.book)\n\nexport const getAll = () =>\n  fetch(`${api}/books`, { headers })\n    .then(res => res.json())\n    .then(data => data.books)\n\nexport const update = (book, shelf) =>\n  fetch(`${api}/books/${book.id}`, {\n    method: 'PUT',\n    headers: {\n      ...headers,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ shelf })\n  }).then(res => res.json())\n\nexport const search = (query) =>\n  fetch(`${api}/search`, {\n    method: 'POST',\n    headers: {\n      ...headers,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ query })\n  }).then(res => res.json())\n    .then(data => data.books)\n","import React, { Component } from 'react';\r\n\r\n\r\nclass BookShelfChanger extends Component{\r\n    state ={\r\n      value: this.props.shelf,\r\n    };\r\n  \r\n  handleChane = event => {\r\n    this.setState({value: event.target.value});\r\n    this.props.onMove(this.props.book, event.target.value);\r\n  }\r\n    render(){\r\n      return(\r\n        <div className=\"book-shelf-changer\"> \r\n          <select value={this.state.value} onChange={this.handleChange}>\r\n            <option value=\"move\" disabled>Move To..</option>\r\n            <option value=\"currentlyReading\">Currently Reading</option>\r\n            <option value=\"wantToRead\">Want To Read</option>\r\n            <option value=\"read\">Read</option>\r\n            <option value=\"none\">None</option>\r\n          </select>\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n\r\n  export default BookShelfChanger;","import React, { Component } from 'react';\r\nimport BookShelfChanger from './BookShelfChanger';\r\n\r\nconst Book = props => {\r\n    const { book, shelf, onMove } = props;\r\n    return(\r\n      <li>\r\n        <div className=\"book\">\r\n          <div className=\"book-top\">\r\n          <div\r\n              className=\"book-cover\"\r\n              style={{\r\n                width: 150,\r\n                height: 200,\r\n                backgroundImage: `url(${book.imageLinks && book.imageLinks.thumbnail})`,\r\n              }}\r\n            />\r\n            <BookShelfChanger book={book} shelf={shelf} onMove={onMove}/>\r\n          </div>\r\n          <div className=\"book-title\">{book.title}</div>\r\n          <div className=\"book-authors\">{book.authors && book.authors.join(', ')}</div>\r\n        </div>\r\n      </li>\r\n    );\r\n  };\r\n\r\n  export default Book;\r\n\r\n\r\n","import React, { Component } from 'react';\r\nimport Book from './Book';\r\n\r\n\r\nconst BookShelf = props => {\r\n    const { shelf, books, onMove} = props;\r\n    const booksOnThisShelf = books.filter(book => book.shelf === shelf.key);\r\n    return (\r\n      <div className=\"bookshelf\">\r\n        <h2 className=\"bookshelf-title\">{shelf.name}</h2>\r\n        <div className=\"bookshelf-books\">\r\n          <ol className=\"books-grid\">\r\n            {booksOnThisShelf.map( book => (\r\n              <Book key={book.id} book={book} shelf={shelf.key} onMove={onMove}/> \r\n            ))}\r\n          </ol>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  export default BookShelf;\r\n","import React from 'react';\r\nimport BookShelf from './BookShelf'\r\n\r\nconst BookCase = props => {\r\n    const { bookshelves, books, onMove } = props;\r\n    return(\r\n      <div className=\"list-books-content\">\r\n        <div>\r\n          {bookshelves.map(shelf => (\r\n            <BookShelf key={shelf.key} shelf={shelf} books={books} onMove={onMove}/>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\nexport default BookCase;","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nconst OpenSearchButton = () => {\r\n    return(\r\n      <div className = \"open-search\">\r\n       <Link to=\"search\">\r\n         <button>Add a Book</button>\r\n       </Link>\r\n      </div>\r\n    );\r\n   };\r\n\r\nexport default OpenSearchButton;","import React, { Component } from 'react';\r\nimport BookCase from './BookCase';\r\nimport OpenSearchButton from './OpenSearchButton';\r\n\r\nclass BookList extends Component {\r\n    render() {\r\n      const {bookshelves, books, onMove} = this.props;\r\n      return (\r\n        <div className=\"list-books\">\r\n          <div className=\"list-books-title\">\r\n            <h1>MyReads</h1>\r\n          </div>\r\n          <BookCase bookshelves = {bookshelves} books={books} onMove={onMove}/>\r\n          <OpenSearchButton />\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n\r\nexport default BookList;","import React, { Component } from 'react';\r\nimport Book from './Book';\r\n\r\nconst SearchResults = props =>{\r\n    const { searchBooks, myBooks, onMove } = props;\r\n    const updatedBooks = searchBooks.map(book => {\r\n      myBooks.map(b => {\r\n        if (b.id === book.id) {\r\n          book.shelf = b.shelf;\r\n        }\r\n        return b;\r\n      });\r\n      return book;\r\n    });\r\n    return(\r\n      <div className=\"search-books-results\">\r\n        <ol className=\"books-grid\">\r\n          {updatedBooks.map(book => (\r\n           <Book\r\n            key={book.id}\r\n            book={book}\r\n            shelf={book.shelf ? book.shelf : 'none'}\r\n            onMove={onMove} />\r\n          ))}\r\n        </ol>\r\n      </div>\r\n    );\r\n  };\r\n\r\nexport default SearchResults;","import React, { Component } from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst ClosedSearchButton = (props) => {\r\n    const {onResetSearch} = props;\r\n    return (\r\n      <Link to=\"/\">\r\n        <button className=\"close-search\" onClick={onResetSearch}>Close</button>\r\n      </Link>\r\n    );\r\n  };\r\n\r\n  export default ClosedSearchButton;","import React, { Component } from 'react';\r\n\r\n\r\nclass SearchBooksInput extends Component {\r\n    state = {\r\n      value: '',\r\n    };\r\n    handleChange = event =>{\r\n      const val = event.target.value;\r\n      this.setState({value: val}, () => {\r\n        this.props.onSearch(val);\r\n      })\r\n    }\r\n    render(){\r\n      return(\r\n        <div className=\"search-books-input-wrapper\">\r\n          <input\r\n           type=\"text\"\r\n           placeholder=\"Search by title or author\"\r\n           value={this.state.value}\r\n           onChange={this.handleChange}\r\n           autoFocus\r\n            />\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n  export default SearchBooksInput;","import React, { Component } from 'react';\r\nimport ClosedSearchButton from './ClosedSearchButton';\r\nimport SearchBooksInput from './SearchBooksInput';\r\n\r\nconst SearchBar = props => {\r\n    const { onSearch, onResetSearch } = props;\r\n    return (\r\n      <div className=\"search-books-bar\">\r\n        <ClosedSearchButton onResetSearch={onResetSearch} />\r\n        <SearchBooksInput onSearch={onSearch}/>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  export default SearchBar;","import React, { Component } from 'react';\r\nimport SearchResults from './SearchResults';\r\nimport SearchBar from './SearchBar';\r\n\r\nclass BookSearch extends Component {\r\n    render() {\r\n      const { searchBooks, myBooks, onMove, onSearch, onResetSearch} = this.props;\r\n      return (\r\n        <div className=\"search-books\">\r\n          <SearchBar onSearch={onSearch} onResetSearch={onResetSearch} />\r\n          <SearchResults \r\n            searchBooks={searchBooks}\r\n            myBooks ={myBooks}\r\n            onMove={onMove}\r\n          />\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n  export default BookSearch;","import React, { Component } from 'react';\nimport { Route } from 'react-router-dom';\nimport { debounce } from 'throttle-debounce';\nimport * as BooksAPI from './BooksAPI';\nimport './App.css';\nimport BookList from './components/BookList';\nimport BookSearch from './components/BookSearch';\n\nclass BooksApp extends Component {\n  bookshelves = [\n    { key: 'currentlyReading', name: 'Currently Reading' },\n    { key: 'wantToRead', name: 'Want to Read' },\n    { key: 'read', name: 'Read' },\n  ];\n  state = {\n    myBooks: [],\n    searchBooks: [],\n  };\n  componentDidMount = () => {\n    BooksAPI.getAll().then(books => {\n      this.setState({ myBooks: books });\n    });\n  };\n  moveBook = (book, shelf) => {\n    BooksAPI.update(book, shelf);\n\n    let updatedBooks = [];\n    updatedBooks = this.state.myBooks.filter(b => b.id !== book.id);\n\n    if (shelf !== 'none') {\n      book.shelf = shelf;\n      updatedBooks = updatedBooks.concat(book);\n    }\n\n    this.setState({\n      myBooks: updatedBooks,\n    });\n  };\n  searchForBooks = debounce(300, false, query => {\n    if (query.length > 0) {\n      BooksAPI.search(query).then(books => {\n        if (books.error) {\n          this.setState({ searchBooks: [] });\n        } else {\n          this.setState({ searchBooks: books });\n        }\n      });\n    } else {\n      this.setState({ searchBooks: [] });\n    }\n  });\n  resetSearch = () => {\n    this.setState({ searchBooks: [] });\n  };\n\n  render() {\n    const { myBooks, searchBooks } = this.state;\n    return (\n      <div className=\"app\">\n        <Route\n          exact\n          path=\"/\"\n          render={() => (\n            <BookList\n              bookshelves={this.bookshelves}\n              books={myBooks}\n              onMove={this.moveBook}\n            />\n          )}\n        />\n        <Route\n          path=\"/search\"\n          render={() => (\n            <BookSearch\n              searchBooks={searchBooks}\n              myBooks={myBooks}\n              onSearch={this.searchForBooks}\n              onMove={this.moveBook}\n              onResetSearch={this.resetSearch}\n            />\n          )}\n        />\n      </div>\n    );\n  }\n}\n\nexport default BooksApp;","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>\n, document.getElementById('root'));\n"],"sourceRoot":""}